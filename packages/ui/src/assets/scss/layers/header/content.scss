@use 'sass:map';
@use 'variables' as *;

.extended-uportal-header > .content {
  height: $header-height;
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 16px;

  > .start {
    display: flex;
    column-gap: 16px;
    align-items: center;

    > .button-placeholder {
      flex: 0 0 $drawer-width - 16;
    }

    > span {
      flex: 0 1 $drawer-expended-width - $drawer-width - 2 * 16;
      font-family: $sora;
      font-size: var(--#{$prefix}font-size-sm);
      font-weight: 600;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    > .dropdown-info {
      display: none;
      transition: margin-left .3s ease-in-out;
    }
  }

  > .middle {
  }

  > .end {
    display: flex;
    align-items: center;
    column-gap: 16px;

    > .search-button {
      @include button-and-tag;
      font-family: $sora;
      font-weight: 600;
      font-size: var(--#{$prefix}font-size-md);
      border-radius: 50%;
      width: 40px;
      height: 40px;
      padding: 12px;
      border: 1px solid var(--#{$prefix}stroke);
      background-color: var(--#{$prefix}basic-grey);

      &:focus-visible {
        outline: 4px solid var(--#{$prefix}primary);
      }
    }

    > .notification {
      display: none;
    }
  }

  @media (width >= map.get($grid-breakpoints, md)) {
    > .end > .notification {
      display: unset;
    }

    > .start {
      > span {
        width: $drawer-expended-width - $drawer-width - 2 * 16;
        transition: width .3s ease-in-out;
      }

      > .dropdown-info {
        display: unset;
      }
    }
  }

  @media (width >= map.get($grid-breakpoints, lg)) {
    > .end > .search-button {
      display: none;
    }
  }
}
