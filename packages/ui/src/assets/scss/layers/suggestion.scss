@use 'sass:map';
@use 'sass:math';
@use '../recia-style' as *;
@use 'header/variables' as *;

$service-width: 150px;

.suggestion {
  > header {
    @extend .container;
    margin-bottom: 24px;

    > h2 {
      margin-bottom: .5rem;
    }

    > a {
      display: none
    }
  }

  > .suggestion-tiles {
    @extend .container;
    list-style: none;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(135px, 1fr));
    gap: 16px;

    > li > a {
      @include link-unstyled;
    }
  }

  > footer {
    @extend .container;
    display: flex;
    margin-top: 24px;
  }

  @media (width >= map.get($grid-breakpoints, md)) {
    > header {
      display: flex;
      align-items: center;

      > a {
        display: inline-flex;
      }
    }

    > .suggestion-tiles {
      display: flex;
      flex-wrap: nowrap;
      overflow-x: auto;
      scrollbar-width: none;
      scroll-behavior: smooth;
      margin-top: -1rem;
      margin-bottom: -1rem;
      max-width: unset;

      > li {
        flex: 0 0 $service-width;
        margin-top: 1rem;
        margin-bottom: 1rem;

        &:first-child {
          @each $name, $value in $grid-breakpoints {
            @if $value != 0 {
              @media screen and (width >= $value) {
                margin-left: max(50vw - #{math.div(map.get($container-max-widths, $name) + $service-width + $drawer-width, 2)}, 0px);
              }
            }
          }
        }
      }

      &:focus-visible {
        outline: 2px dotted var(--#{$prefix}primary);
      }
    }

    > footer {
      display: none;
    }
  }
}
