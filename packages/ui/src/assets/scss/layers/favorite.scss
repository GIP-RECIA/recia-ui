@use 'sass:map';
@use '../recia-style' as *;

%action-button {
  @extend %button-and-tag;
  border-radius: 9px;
  height: 32px;
  width: 32px;
  padding: 8px;
  font-size: var(--#{$prefix}font-size-md);
  outline: none;
}

.favorite {
  border-radius: 10px;
  padding: 12px;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  row-gap: 4px;
  width: 100%;
  height: 100%;
  min-height: 100px;

  > .actions {
    position: absolute;
    inset: 0 -14px;
    z-index: 1;
    display: flex;
    align-items: center;
    border-radius: 10px;

    > .action {
      &-delete {
        position: absolute;
        top: 6px;
        right: 6px + 14px;

        > button {
          @extend %action-button;
          background-color: unset;
          color: var(--#{$prefix}system-red);

          &:hover,
          &:focus-visible {
            background-color: var(--#{$prefix}system-red);
            color: $white;
          }
        }
      }

      &-back,
      &-next {
        opacity: 0;

        > button {
          @extend %action-button;
          background-color: var(--#{$prefix}btn-primary-bg);
          color: var(--#{$prefix}btn-primary);

          &:hover,
          &:focus-visible {
            background-color: var(--#{$prefix}primary);
          }

          &:disabled {
            background-color: var(--#{$prefix}stroke);
            color: HEXToRGBA(var(--#{$prefix}basic-black), .3);
            pointer-events: none;
          }
        }
      }
    }

    &.disabled {
      display: none;
    }

    &:hover,
    &:has(:focus-visible) {
      z-index: 2;

      > .action {
        &-back,
        &-next {
          opacity: 1;
        }
      }
    }
  }

  &:has(.actions:not(.disabled)) {
    &:hover,
    &:has(:focus-visible) {
      outline: none;
      box-shadow: var(--#{$prefix}shadow-strong) HEXToRGBA(var(--#{$prefix}black), .1);
    }
  }

  & > &-icon {
    flex: 0 0 auto;
    height: 24px;
    width: 24px;
    opacity: .2;
  }

  & > &-name {
    flex: 0 0 auto;
    @include link-unstyled;

    > span {
      font-size: var(--#{$prefix}font-size-xs);
    }

    > span[aria-hidden="true"] {
      position: absolute;
      inset: 0;
      border-radius: 10px;
    }

    &:focus-visible {
      outline: none;
    }
  }

  & > &-category {
    flex: 0 0 auto;
    display: inline-flex;
    font-family: $dm-sans;
    font-size: var(--#{$prefix}font-size-xs);
    font-weight: 500;
    padding: 4px 10px;
    border-radius: 13px;
    background-color: var(--#{$prefix}stroke);
  }

  @each $type, $values in $categories {
    &.#{$type} {
      > .favorite-category {
        background-color: var(--#{$prefix}#{$type});
        color: var(--#{$prefix}#{$type}-text);
      }
    }
  }

  &:hover,
  &:has(:focus-visible) {
    outline: 2px solid var(--#{$prefix}primary);
    box-shadow: var(--#{$prefix}shadow-hover) HEXToRGBA(var(--#{$prefix}primary), .2);
  }
}
