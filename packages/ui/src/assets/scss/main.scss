@use 'sass:map';

@use 'recia-style' as *;

@use 'layers/actions';
@use 'layers/alert';
@use 'layers/bottom-sheet';
@use 'layers/discover';
@use 'layers/dropdown-info';
@use 'layers/favorites';
@use 'layers/filters';
@use 'layers/footer';
@use 'layers/header/variables' as *;
@use 'layers/header';
@use 'layers/login';
@use 'layers/news';
@use 'layers/page-layout';
@use 'layers/services';
@use 'layers/suggestions';
@use 'layers/tooltip';
@use 'layers/user-menu';
@use 'layers/wayf';
@use 'layers/widgets';

@each $domain, $data in $domain-theme {
  .dev-playground.#{'dom-#{$domain}'} {
    @each $color, $value in map.get($data, theme-colors) {
      --#{$prefix}#{$color}: #{$value};
      --#{$prefix}#{$color}-light: #{$value};
    }

    @each $color, $value in map.get($data, theme-colors-dark) {
      --#{$prefix}#{$color}-inverted: #{$value};
      --#{$prefix}#{$color}-dark: #{$value};
    }

    @each $color, $value in map.get($data, buttons) {
      --#{$prefix}btn-#{$color}: #{$value};
      --#{$prefix}btn-#{$color}-light: #{$value};
    }

    @each $color, $value in map.get($data, buttons-dark) {
      --#{$prefix}btn-#{$color}-inverted: #{$value};
      --#{$prefix}btn-#{$color}-dark: #{$value};
    }
  }

  @media (prefers-color-scheme: dark) {
    .dev-playground.#{'dom-#{$domain}'} {
      color-scheme: dark;

      @each $color, $value in map.get($data, theme-colors-dark) {
        --#{$prefix}#{$color}: #{$value};
      }

      @each $color, $value in map.get($data, theme-colors) {
        --#{$prefix}#{$color}-inverted: #{$value};
      }

      @each $color, $value in map.get($data, buttons-dark) {
        --#{$prefix}btn-#{$color}: #{$value};
      }

      @each $color, $value in map.get($data, buttons) {
        --#{$prefix}btn-#{$color}-inverted: #{$value};
      }
    }
  }
}

html {
  font-size: var(--#{$prefix}font-size-base);
}

body {
  background-color: var(--#{$prefix}body-bg);
  font-family: $dm-sans;
  font-style: normal;
  font-weight: normal;
  font-size: var(--#{$prefix}body-font-size);
  letter-spacing: 0;
  color: var(--#{$prefix}body);

  &.dev-playground {
    height: 100vh;
    display: grid;
    grid-template-rows: auto auto 1fr auto;
    grid-template-areas:
      'header'
      'alert'
      'main'
      'footer';

    > header {
      grid-area: header;
      height: $header-height;
    }

    > .alert {
      grid-area: alert;
    }

    > main {
      grid-area: main;
      margin-top: 40px;
      margin-bottom: 40px;
      display: grid;
      grid-auto-rows: min-content;
      row-gap: 40px;

      > * {
        min-width: 0;
      }
    }

    > iframe {
      grid-area: main;
    }

    > footer {
      grid-area: footer;
    }

    @media (width >= map.get($grid-breakpoints, md)) {
      > main {
        row-gap: 70px;
      }
    }
  }
}
