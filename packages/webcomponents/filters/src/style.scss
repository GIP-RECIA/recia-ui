@use 'sass:map';
@use '../../common/assets/scss/global' as *;
@import '@fortawesome/fontawesome-svg-core/styles.css';

@keyframes shimmer {
  0% {
    background-position: 100% 0;
  }

  100% {
    background-position: -100% 0;
  }
}

.filters {
  border-radius: 10px;
  box-shadow: var(--#{$prefix}shadow-strong) HEXToRGBA($black, .1);

  > header {
    > button {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      height: 60px;
      width: 100%;
      padding: 12px 16px;
      text-align: start;
      font-size: var(--#{$prefix}font-size-md);
      font-weight: bold;
      color: inherit;

      > .folded-indicator {
        font-size: 16px;
        margin: 8px;
        color: var(--#{$prefix}basic-black);
        transition: rotate .2s ease-in-out;
      }

      &:hover,
      &:focus-visible {
        outline: none;

        > .heading {
          color: var(--#{$prefix}primary);
        }
      }
    }

    > button > .heading,
    > .heading {
      &.skeleton {
        width: 60px;
        height: 1em;
        border-radius: 50px;
        background: linear-gradient(90deg, #e9e9e9 30%, #f6f6f6 50%, #e9e9e9 70%);
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite linear;
      }
    }

    > button > .heading.skeleton {
      display: block;
    }

    > .heading {
      display: none;
      font-size: var(--#{$prefix}font-size-md);
      font-weight: bold;
    }
  }

  > ul {
    @include unstyled-list;
    display: flex;
    flex-wrap: wrap;
    gap: 14px 16px;
    padding-left: 16px;
    padding-right: 16px;
    padding-bottom: 16px;

    > li {
      position: relative;

      &:not(:last-child) {
        padding-bottom: 15.5px;

        &::after {
          content: '';
          position: absolute;
          left: -16px;
          right: -16px;
          bottom: 0;
          border-bottom: 1px solid var(--#{$prefix}stroke);
        }
      }

      > header {
        position: relative;
        margin-bottom: 16px;
        font-size: var(--#{$prefix}font-size-sm);

        > span.skeleton {
          display: block;
          width: 80px;
          height: 1em;
          border-radius: 50px;
          background: linear-gradient(90deg, #e9e9e9 30%, #f6f6f6 50%, #e9e9e9 70%);
          background-size: 200% 100%;
          animation: shimmer 1.5s infinite linear;
        }
      }

      > form > fieldset {
        border: none;

        > ul {
          position: relative;
          @include unstyled-list;
          display: flex;
          flex-wrap: wrap;
          gap: 14px 16px;

          > li.skeleton {
            width: 150px;
            height: 33px;
            border-radius: 50px;
            background: linear-gradient(90deg, #e9e9e9 30%, #f6f6f6 50%, #e9e9e9 70%);
            background-size: 200% 100%;
            animation: shimmer 1.5s infinite linear;
          }
        }
      }
    }
  }

  &:has(> header > button:focus-visible) {
    outline: 2px solid var(--#{$prefix}primary);
  }

  @media (width >= map.get($grid-breakpoints, md)) {
    box-shadow: none;

    > header {
      margin-bottom: 8px;

      > button {
        display: none;
      }

      > span {
        display: unset !important;

        &.skeleton {
          display: block !important;
        }
      }
    }

    > ul {
      display: grid !important;
      grid-template-columns: auto 1fr;
      padding: 0;

      > li {
        display: contents;

        > header {
          grid-column: 1;
          margin: 0;
          margin-top: 8px;
          font-size: var(--#{$prefix}font-size-xs);
        }

        &:has(> header) > form {
          grid-column: 2;
        }

        > form > fieldset > ul > li {
          gap: 14px;
        }

        &:not(:last-child){
          &::after {
            content: none;
          }

          > header,
          > form > fieldset > ul {
            padding-bottom: 15.5px;

            &::after {
              content: '';
              position: absolute;
              left: 0;
              right: 0;
              bottom: 0;
              border-bottom: 1px solid var(--#{$prefix}stroke);
            }
          }

          > header::after {
            right: -16px;
          }
        }
      }
    }
  }
}
